on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: ohdsi/check-hades-package


  Release:
    needs: R-CMD-Check

    runs-on: macOS-latest

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}

    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check if version has increased
        run: |
          echo "new_version="$(perl compare_versions --tag) >> $GITHUB_ENV

      - name: Display new version number
        if: ${{ env.new_version != '' }}
        run: |
          echo "${{ env.new_version }}"

      - name: Create release
        if: ${{ env.new_version != '' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ env.new_version }}
          release_name: Release ${{ env.new_version }}
          body: |
            See NEWS.md for release notes.
          draft: false
          prerelease: false

      - uses: r-lib/actions/setup-r@v2
        if: ${{ env.new_version != '' }}

      - name: Install drat
        if: ${{ env.new_version != '' }}
        run: |
          install.packages('drat')
        shell: Rscript {0}

      - name: Remove any tarballs that already exists
        if: ${{ env.new_version != '' }}
        run: |
          rm -f *.tar.gz

      - name: Download package tarball
        if: ${{ env.new_version != '' }}
        uses: actions/download-artifact@v2
        with:
          name: package_tarball

      - name: Push to drat
        if: ${{ env.new_version != '' }}
        run: |
          bash deploy.sh

      - name: Push to BroadSea
        if: ${{ env.new_version != '' }}
        run: |
          curl --data "build=true" -X POST https://registry.hub.docker.com/u/ohdsi/broadsea-methodslibrary/trigger/f0b51cec-4027-4781-9383-4b38b42dd4f5/

